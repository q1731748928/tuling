import base64
import json
import math
import random
import time
import subprocess
from DrissionPage import WebPage,ChromiumOptions,SessionOptions
from urllib.parse import quote_plus,quote
import csv
import pandas as pd

class WriteToCsv:
    def __init__(self, file_name,col_name_list):
        self.file_name = file_name
        self.csv_file = open(file_name, 'w', newline='', encoding='utf-8')
        self.csv_writer = csv.writer(self.csv_file)
        self.csv_writer.writerow(col_name_list)

    def write_data(self, data):
        self.csv_writer.writerow(data)

    def write_datas(self, datas):
        self.csv_writer.writerows(datas)

    def close_file(self):
        self.csv_file.close()

    def change_csv_to_xlsx(self):
        df = pd.read_csv(self.file_name, encoding='utf-8')
        df.to_excel(self.file_name.replace('.csv', '.xlsx'), index=False)

def get_js_code():
    js_code = """
"""
    js_code = base64.b64decode(js_code).decode('utf-8')
    return js_code

def get_static_list():
    static_list = [
    {
        "content": "22",
        "createTime": "2021-10-20 22:59:33",
        "detail": "",
        "end": 1735660799,
        "endTime": "2024-12-31 23:59:59",
        "exhibitionId": 85,
        "id": 3443,
        "mainTitle": "实时热销",
        "mainTitleColor": "#000000",
        "name": "",
        "operator": "shaohuoqin",
        "order": 1,
        "start": 1634659200,
        "startTime": "2021-10-20 00:00:00",
        "status": 1,
        "subtitle": "",
        "subtitleColor": "#000000",
        "targetUserTag": 0,
        "updateTime": "2023-01-05 15:44:09",
        "url": "",
        "urlList": []
    },
    {
        "content": "108",
        "createTime": "2021-10-20 23:00:15",
        "detail": "",
        "end": 1735660799,
        "endTime": "2024-12-31 23:59:59",
        "exhibitionId": 85,
        "id": 3444,
        "mainTitle": "秒杀专区",
        "mainTitleColor": "#000000",
        "name": "",
        "operator": "shaohuoqin",
        "order": 2,
        "start": 1634659200,
        "startTime": "2021-10-20 00:00:00",
        "status": 1,
        "subtitle": "",
        "subtitleColor": "#000000",
        "targetUserTag": 0,
        "updateTime": "2023-01-05 15:44:19",
        "url": "",
        "urlList": []
    },
    {
        "content": "153",
        "createTime": "2021-10-20 23:02:28",
        "detail": "",
        "end": 1735660799,
        "endTime": "2024-12-31 23:59:59",
        "exhibitionId": 85,
        "id": 3445,
        "mainTitle": "历史低价",
        "mainTitleColor": "#000000",
        "name": "",
        "operator": "shaohuoqin",
        "order": 3,
        "start": 1634659200,
        "startTime": "2021-10-20 00:00:00",
        "status": 1,
        "subtitle": "",
        "subtitleColor": "#000000",
        "targetUserTag": 0,
        "updateTime": "2023-01-05 15:44:28",
        "url": "",
        "urlList": []
    },
    {
        "content": "129",
        "createTime": "2021-10-20 23:03:58",
        "detail": "",
        "end": 1735660799,
        "endTime": "2024-12-31 23:59:59",
        "exhibitionId": 85,
        "id": 3446,
        "mainTitle": "定向高佣",
        "mainTitleColor": "#000000",
        "name": "",
        "operator": "shaohuoqin",
        "order": 4,
        "start": 1634659200,
        "startTime": "2021-10-20 00:00:00",
        "status": 1,
        "subtitle": "",
        "subtitleColor": "#000000",
        "targetUserTag": 0,
        "updateTime": "2023-01-05 15:44:41",
        "url": "",
        "urlList": []
    },
    {
        "content": "23",
        "createTime": "2021-10-20 23:06:03",
        "detail": "",
        "end": 1735660799,
        "endTime": "2024-12-31 23:59:59",
        "exhibitionId": 85,
        "id": 3447,
        "mainTitle": "粉丝爱买",
        "mainTitleColor": "#000000",
        "name": "",
        "operator": "shaohuoqin",
        "order": 5,
        "start": 1634659200,
        "startTime": "2021-10-20 00:00:00",
        "status": 1,
        "subtitle": "",
        "subtitleColor": "#000000",
        "targetUserTag": 0,
        "updateTime": "2023-01-05 15:44:57",
        "url": "",
        "urlList": []
    }
]
    return static_list

def get_h5st(search_data):
    obj_str = json.dumps(search_data, ensure_ascii=False, separators=(',', ':'))
    # with open('hnw.js', 'r', encoding='utf-8') as f:
    #     js_code = f.read()
    js_code = get_js_code()
    js_code = js_code.replace('obj_str', obj_str)
    with open('run.js', 'w', encoding='utf-8') as f:
        f.write(js_code)
    result = subprocess.run(['node', 'run.js'], capture_output=True, text=True)
    h5st = result.stdout
    return h5st

def get_params(search_data):
    times = int(time.time() * 1000)
    obj_str = json.dumps(search_data,ensure_ascii=False, separators=(',', ':'))
    h5st = get_h5st(search_data)
    params = {
        'functionId': 'unionSearch',
        'appid': 'unionpc',
        '_': times,
        'loginType': '3',
        'uuid': quote(uuid),
        'x-api-eid-token': x_api_eid_token,
        'h5st': quote(h5st.strip()),
        'body': quote(obj_str)
    }
    return params

def get_info_data(item):
    skuName = item.get('skuName')
    couponAfterPrice = item.get('couponAfterPrice')
    venderName = item.get('venderName')
    goodComments = item.get('goodComments')
    info_data = [skuName, couponAfterPrice, venderName, goodComments]
    return info_data

def get_page_data(page_num, content):
    search_data = {"funName": "querySearchInfoByEliteId", "param": {"pageNo": page_num, "pageSize": 60, "eliteId": content},
                   "clientPageId": "jingfen_pc"}
    for c in range(1, 13):
        try:
            params = get_params(search_data)
            api_url = 'https://api.m.jd.com/api'
            lst = []
            for k, v in params.items():
                lst.append(f'{k}={v}')
            pa_str = '&'.join(lst)
            api_url = f'{api_url}?{pa_str}'
            headers = so.headers
            resp = web_page.get(api_url)
            print('resp: ',resp)
            if resp:
                break
            else:
                print(f'第{c}次请求失败~!~')
        except Exception as e:
            print(f'第{c}次请求失败: ', e)
    json_data = json.loads(web_page.html).get('data')
    hasNext = json_data.get('hasNext')
    total = json_data.get('total')
    total_page = math.ceil(total / 50)
    result = json_data.get('result')
    print('hasNext: ', hasNext)
    print('total: ', total)
    print('result: ', len(result))
    for item in result:
        info_data =get_info_data(item)
        print(info_data)
        writer.write_data(info_data)
    return total, total_page, hasNext

if __name__ == '__main__':
    co = ChromiumOptions()
    so = SessionOptions()
    co.auto_port(True)
    web_page = WebPage(chromium_options=co,session_or_options=so)
    url = 'https://union.jd.com/proManager/index?pageNo=1'
    web_page.get(url)
    time.sleep(2)
    cok_dic = web_page.cookies(as_dict=True)
    x_api_eid_token = cok_dic.get('3AB9D23F7A4B3CSS')
    __jda = cok_dic.get('__jda')
    uuid = __jda.split('.')[1]
    web_page.change_mode()
    static_list = get_static_list()
    for static_dic in static_list:
        mainTitle = static_dic.get('mainTitle')
        content = static_dic.get('content')
        print(mainTitle, content)
        writer = WriteToCsv(f'jd_{mainTitle}-{content}.csv', ['商品名称', '券后价', '店铺名称', '好评数'])
        page_num = 1
        while True:
            print(f'正在获取第{page_num}页数据: ')
            total, total_page, hasNext = get_page_data(page_num, content)
            print(f'第{page_num}页数据获取完成~!')
            if not hasNext:
                break
            page_num += 1
            time.sleep(random.uniform(1, 2))
        writer.close_file()
        writer.change_csv_to_xlsx()
    web_page.close()