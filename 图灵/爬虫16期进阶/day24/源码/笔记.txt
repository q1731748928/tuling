

cookie加密的方式
    1. 在服务端生成cookie    不需要逆向  但是需要请求对应的接口
    2. 在js生成(前端)        逆向cookie生成的过程
    3. 产品  在js生成        服务器请求  返回js代码   在前端会自动执行这个js代码  生成新的cookie  在发送请求  才能获取数据




区分cookie是需要解密
    验证是否效验
        注释cookie内容   运行查看

怎么区分  cookie是服务器返回的  还是js生成的


cookie逆向的过程
    根据cookie键找cookie的位置
        网页清空cookie --> 刷新网页  搜索需要定位的cookie值 --> 看是不是set-cookie返回的 --> 排除搜索出来的资源包 --> 看发送请的cookie当中是否需要我们的cookie
    根据值找cookie的位置


响应cookie代码处理
    发送第一次请求  取出返回的cookie信息
    带上响应的cookie发送第二次请求


响应js代码生成cookie
    响应的js代码会生成cookie  在刷新页面


安全产品
    加速乐   名字   jsl
    请求的过程
        请求3次
        第一次  状态码  521
        第二次  状态码  521
        第三次  返回数据



var _0x5556ce = _0x4b5751[_0x36ee('0xa2', 'U^#O') + 'N'](_0x4b5751[_0x36ee('0x6a', 'xw64') + 'N'](_0x2b6c24['tn'] + '=', _0x40da4d[0x0]), _0x36ee('0xf6', 'tQjm') + _0x36ee('0x167', 'Sv*0') + '=') + _0x2b6c24['vt'] + _0x4b5751[_0x36ee('0x104', '1U&l') + 'U']


纯算     对js代码  要非常熟悉   




