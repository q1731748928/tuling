"""
class 类名:
    属性
    方法
"""


class Dog:
    # 创建类的特征[属性]
    # 方法名称是固定的, 不能修改
    def __init__(self):
        self.color = '黄色' # 实例化方法: 主要用于给类创建属性用户的
        self.name = '旺仔'
        self.type = '金毛'

    # 创建类的行为[方法]
    def bark(self):
        print("%s在汪汪叫..." % self.name)
        # print(f'{self.name}在汪汪叫...')

# 类的实例化过程
dog = Dog() # 根据类的描述创建了一只狗
dog.bark() # 对象运行类中定义的行为[方法]
print(dog.color, dog.name, dog.type)



"""
1.如果在类中定义属性
    使用 __init__方法定义属性
2.如何在类中定义方法
    在一个类的内部直接定义函数即可, 需要注意的是如果一个函数在一个类的内部
        则这个参数被称之为方法, 并且这个函数的第一个参数为self
3.如果在类名之后加()则被称之为实例化过程, 实例化之后会返回一个结果
    这个结果是类的对象
"""